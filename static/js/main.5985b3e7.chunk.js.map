{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","GoodList","goods","map","good","App","useState","NONE","sortField","setSortField","isReversed","setIsReversed","visibleGoods","prepearedGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,4EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,QAAAA,E,oBAAAA,E,iBAAAA,M,KAML,IAAME,EAAwC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC5C,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SA8BR,IAAMC,EAAM,WACjB,MAAkCC,mBAASP,EAASQ,MAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA7BR,SACEV,EADF,GAGG,IADCM,EACF,EADEA,UAAWE,EACb,EADaA,WAEPG,EAAc,YAAOX,GAmB3B,OAjBIM,GACFK,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQR,GACN,KAAKT,EAASkB,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXV,GACFG,EAAeQ,UAGVR,EAOHS,CAAiBtB,EAAiB,CAAEQ,YAAWE,eAEnD,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYjB,IAAcT,EAASkB,WACvCS,QAAS,WACPjB,EAAaV,EAASkB,WAL1B,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYjB,IAAcT,EAASoB,SACvCO,QAAS,kBAAMjB,EAAaV,EAASoB,SAJvC,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAaf,IACjBgB,QAAS,kBAAMf,GAAeD,IAJhC,sBASEF,GAAaE,IACb,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAaV,EAASQ,MACtBI,GAAc,IALlB,sBAYJ,cAAC,EAAD,CAAUT,MAAOU,QC1GvBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5985b3e7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { Good } from './types/Good';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = '',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nconst GoodList: React.FC<{ goods: Good[] }> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good} data-cy=\"Good\">{good}</li>))}\n  </ul>\n);\n\nfunction getPreparedGoods(\n  goods: Good[],\n  { sortField, isReversed }: { sortField: SortType, isReversed: boolean },\n) {\n  const prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, { sortField, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SortType.ALPHABET })}\n          onClick={() => {\n            setSortField(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SortType.LENGTH })}\n          onClick={() => setSortField(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SortType.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}